<<<<<<< HEAD
# Generated by Django 3.2.7 on 2022-10-21 20:32
=======
# Generated by Django 3.2.15 on 2022-12-10 05:34
>>>>>>> adding_process_node

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_currentuser.db.models.fields
import django_currentuser.middleware


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
<<<<<<< HEAD
            name='AppAuthor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, max_length=10000, null=True)),
                ('url', models.TextField(blank=True, max_length=500, null=True)),
                ('contact_email', models.TextField(blank=True, max_length=500, null=True)),
                ('address', models.TextField(blank=True, max_length=500, null=True)),
                ('image_link', models.FileField(blank=True, null=True, upload_to='images/')),
            ],
        ),
        migrations.CreateModel(
=======
>>>>>>> adding_process_node
            name='DataAnalysisQueue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('processing_name', models.TextField(blank=True, max_length=100, null=True)),
                ('worker_hostname', models.TextField(blank=True, max_length=100, null=True)),
                ('keep_full_output', models.BooleanField(default=False, null=True)),
                ('update_qc', models.BooleanField(default=False, null=True)),
                ('run_status', models.BooleanField(default=False, null=True)),
                ('submit_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('finish_time', models.DateTimeField(blank=True, null=True)),
<<<<<<< HEAD
                ('input_file_1', models.FileField(blank=True, null=True, upload_to='primary_storage/dataqueue/tempfolder')),
                ('input_file_2', models.FileField(blank=True, null=True, upload_to='primary_storage/dataqueue/tempfolder')),
                ('input_file_3', models.FileField(blank=True, null=True, upload_to='primary_storage/dataqueue/tempfolder')),
                ('output_file_1', models.FileField(blank=True, null=True, upload_to='primary_storage/dataqueue/tempfolder')),
                ('output_file_2', models.FileField(blank=True, null=True, upload_to='primary_storage/dataqueue/tempfolder')),
                ('output_file_3', models.FileField(blank=True, null=True, upload_to='primary_storage/dataqueue/tempfolder')),
=======
                ('input_file_1', models.FileField(blank=True, null=True, upload_to='primary_storage/dataqueue/uniquetempfolder')),
                ('input_file_2', models.FileField(blank=True, null=True, upload_to='primary_storage/dataqueue/uniquetempfolder')),
                ('input_file_3', models.FileField(blank=True, null=True, upload_to='primary_storage/dataqueue/uniquetempfolder')),
                ('output_file_1', models.FileField(blank=True, null=True, upload_to='primary_storage/dataqueue/uniquetempfolder')),
                ('output_file_2', models.FileField(blank=True, null=True, upload_to='primary_storage/dataqueue/uniquetempfolder')),
                ('output_file_3', models.FileField(blank=True, null=True, upload_to='primary_storage/dataqueue/uniquetempfolder')),
>>>>>>> adding_process_node
                ('output_QC_number_1', models.IntegerField(blank=True, null=True)),
                ('output_QC_number_2', models.IntegerField(blank=True, null=True)),
                ('output_QC_number_3', models.IntegerField(blank=True, null=True)),
                ('output_QC_number_4', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FileStorage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_location', models.FileField(blank=True, null=True, upload_to='')),
                ('file_type', models.TextField(blank=True, max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProcessingApp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, max_length=100, null=True)),
<<<<<<< HEAD
                ('version', models.TextField(blank=True, max_length=100, null=True)),
                ('is_enabled', models.BooleanField(default=False, null=True)),
                ('description', models.TextField(blank=True, max_length=5000, null=True)),
                ('icon', models.FileField(blank=True, null=True, upload_to='images/')),
                ('install_package', models.FileField(blank=True, null=True, upload_to='codes/install')),
                ('process_package', models.FileField(blank=True, null=True, upload_to='codes/processing')),
                ('app_url', models.TextField(blank=True, max_length=100, null=True)),
                ('preset_1', models.FileField(blank=True, null=True, upload_to='presets/')),
                ('preset_2', models.FileField(blank=True, null=True, upload_to='presets/')),
                ('preset_3', models.FileField(blank=True, null=True, upload_to='presets/')),
                ('preset_4', models.FileField(blank=True, null=True, upload_to='presets/')),
                ('preset_5', models.FileField(blank=True, null=True, upload_to='presets/')),
                ('preset_6', models.FileField(blank=True, null=True, upload_to='presets/')),
                ('preset_7', models.FileField(blank=True, null=True, upload_to='presets/')),
                ('preset_8', models.FileField(blank=True, null=True, upload_to='presets/')),
                ('preset_9', models.FileField(blank=True, null=True, upload_to='presets/')),
                ('preset_10', models.FileField(blank=True, null=True, upload_to='presets/')),
                ('app_author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='file_manager.appauthor')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(blank=True, max_length=100, null=True)),
                ('content', models.TextField(blank=True, max_length=10000, null=True)),
                ('stars', models.FloatField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
=======
                ('installed_version', models.TextField(blank=True, max_length=100, null=True)),
                ('is_enabled', models.BooleanField(default=False, null=True)),
                ('description', models.TextField(blank=True, max_length=5000, null=True)),
                ('icon', models.FileField(blank=True, null=True, upload_to='primary_storage/systemfiles/images/')),
                ('install_package', models.FileField(blank=True, null=True, upload_to='primary_storage/systemfiles/codes/install')),
                ('process_package', models.FileField(blank=True, null=True, upload_to='primary_storage/systemfiles/codes/processing')),
                ('app_homepage_url', models.TextField(blank=True, max_length=100, null=True)),
                ('preset_1', models.FileField(blank=True, null=True, upload_to='primary_storagee/systemfiles/presets/')),
                ('preset_2', models.FileField(blank=True, null=True, upload_to='primary_storage/systemfiles/presets/')),
                ('preset_3', models.FileField(blank=True, null=True, upload_to='primary_storage/systemfiles/presets/')),
                ('preset_4', models.FileField(blank=True, null=True, upload_to='primary_storage/systemfiles/presets/')),
                ('preset_5', models.FileField(blank=True, null=True, upload_to='primary_storage/systemfiles/presets/')),
                ('preset_6', models.FileField(blank=True, null=True, upload_to='primary_storage/systemfiles/presets/')),
                ('preset_7', models.FileField(blank=True, null=True, upload_to='primary_storage/systemfiles/presets/')),
                ('preset_8', models.FileField(blank=True, null=True, upload_to='primary_storage/systemfiles/presets/')),
                ('user_preset_1', models.FileField(blank=True, null=True, upload_to='primary_storage/systemfiles/presets/')),
                ('user_preset_2', models.FileField(blank=True, null=True, upload_to='primary_storage/systemfiles/presets/')),
                ('app_author', models.TextField(blank=True, max_length=100, null=True)),
                ('lastest_update', models.DateTimeField(auto_now_add=True, null=True)),
                ('lastest_version', models.TextField(blank=True, max_length=100, null=True)),
                ('is_installed', models.BooleanField(default=False, null=True)),
                ('UUID', models.TextField(blank=True, max_length=100, null=True)),
                ('progam_file_name', models.TextField(blank=True, max_length=100, null=True)),
>>>>>>> adding_process_node
            ],
        ),
        migrations.CreateModel(
            name='SystemSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('facility_name', models.TextField(blank=True, default='My', max_length=1000, null=True)),
                ('auto_backup_settings', models.JSONField(default=dict, null=True)),
                ('auto_purge_settings', models.JSONField(default=dict, null=True)),
<<<<<<< HEAD
                ('system_version', models.TextField(blank=True, max_length=1000, null=True)),
=======
                ('systemfile_backup_settings', models.JSONField(default=dict, null=True)),
                ('system_version', models.TextField(blank=True, max_length=1000, null=True)),
                ('app_store_server', models.TextField(blank=True, default='https://proteomicsdata.com/', max_length=1000, null=True)),
                ('secret_mode', models.BooleanField(default=False, null=True)),
>>>>>>> adding_process_node
            ],
        ),
        migrations.CreateModel(
            name='WorkerStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seq_number', models.IntegerField(blank=True, default=0, null=True)),
                ('worker_ip', models.TextField(blank=True, max_length=100, null=True)),
                ('worker_name', models.TextField(blank=True, max_length=100, null=True)),
                ('last_update', models.TextField(blank=True, max_length=100, null=True)),
                ('current_job', models.TextField(blank=True, max_length=100, null=True)),
                ('processing_app', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='file_manager.processingapp')),
            ],
        ),
        migrations.CreateModel(
            name='VisualizationApp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, max_length=100, null=True)),
<<<<<<< HEAD
                ('version', models.TextField(blank=True, max_length=100, null=True)),
                ('is_enabled', models.BooleanField(default=False, null=True)),
                ('description', models.TextField(blank=True, max_length=5000, null=True)),
                ('icon', models.FileField(blank=True, null=True, upload_to='images/')),
                ('app_url', models.TextField(blank=True, max_length=100, null=True)),
                ('app_author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='file_manager.appauthor')),
                ('reviews', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='file_manager.review')),
=======
                ('installed_version', models.TextField(blank=True, max_length=100, null=True)),
                ('is_enabled', models.BooleanField(default=False, null=True)),
                ('description', models.TextField(blank=True, max_length=5000, null=True)),
                ('icon', models.FileField(blank=True, null=True, upload_to='primary_storage/systemfiles/images/')),
                ('app_homepage_url', models.TextField(blank=True, max_length=100, null=True)),
                ('app_author', models.TextField(blank=True, max_length=100, null=True)),
                ('lastest_update', models.DateTimeField(auto_now_add=True, null=True)),
                ('lastest_version', models.TextField(blank=True, max_length=100, null=True)),
                ('is_installed', models.BooleanField(default=False, null=True)),
                ('UUID', models.TextField(blank=True, max_length=100, null=True)),
                ('progam_file_name', models.TextField(blank=True, max_length=100, null=True)),
>>>>>>> adding_process_node
                ('support_process_apps', models.ManyToManyField(blank=True, to='file_manager.ProcessingApp')),
            ],
        ),
        migrations.CreateModel(
            name='UserSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hide_othersresult', models.BooleanField(default=False, null=True)),
<<<<<<< HEAD
                ('hide_other_apps', models.BooleanField(default=False, null=True)),
=======
>>>>>>> adding_process_node
                ('QC_pro_tool', models.TextField(blank=True, default='None', max_length=100, null=True)),
                ('qc_1_name', models.TextField(blank=True, default='Protein', max_length=100, null=True)),
                ('qc_2_name', models.TextField(blank=True, default='Peptide', max_length=100, null=True)),
                ('qc_3_name', models.TextField(blank=True, default='PSM', max_length=100, null=True)),
                ('qc_4_name', models.TextField(blank=True, default='MS2', max_length=100, null=True)),
<<<<<<< HEAD
=======
                ('conversion_settings', models.JSONField(default={'command_list_after_file': ['-o', '/data'], 'command_list_before_file': ['wine', 'msconvert'], 'docker_image': 'proteowizard/pwiz-skyline-i-agree-to-the-vendor-licenses'}, null=True)),
                ('replace_raw_with_mzML', models.BooleanField(default=False, null=True)),
>>>>>>> adding_process_node
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SavedVisualization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visualization_name', models.TextField(blank=True, max_length=100, null=True)),
                ('last_saved', models.DateTimeField(blank=True, null=True)),
                ('settings', models.JSONField(default=dict, null=True)),
                ('data_source', models.ManyToManyField(to='file_manager.DataAnalysisQueue')),
                ('visual_creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('visualization_app', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='file_manager.visualizationapp')),
            ],
        ),
        migrations.CreateModel(
            name='SampleRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_name', models.TextField(blank=True, max_length=100, null=True)),
                ('record_description', models.TextField(blank=True, max_length=1000, null=True)),
<<<<<<< HEAD
=======
                ('file_vendor', models.TextField(blank=True, max_length=100, null=True)),
>>>>>>> adding_process_node
                ('instrument_model', models.TextField(blank=True, max_length=100, null=True)),
                ('instrument_sn', models.TextField(blank=True, max_length=100, null=True)),
                ('column_sn', models.TextField(blank=True, max_length=100, null=True)),
                ('spe_sn', models.TextField(blank=True, max_length=100, null=True)),
                ('is_temp', models.BooleanField(default=False, null=True)),
                ('notes', models.TextField(blank=True, max_length=1000, null=True)),
                ('acquisition_time', models.DateTimeField(blank=True, null=True)),
                ('uploaded_time', models.DateTimeField(auto_now_add=True)),
                ('temp_rawfile', models.FileField(blank=True, null=True, upload_to='temp/')),
                ('file_size', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=5, null=True)),
                ('is_processed', models.BooleanField(default=False, null=True)),
                ('project_name', models.TextField(blank=True, max_length=100, null=True)),
                ('sample_type', models.TextField(blank=True, max_length=100, null=True)),
                ('factor_1_name', models.TextField(blank=True, max_length=100, null=True)),
                ('factor_1_value', models.TextField(blank=True, max_length=100, null=True)),
                ('factor_2_name', models.TextField(blank=True, max_length=100, null=True)),
                ('factor_2_value', models.TextField(blank=True, max_length=100, null=True)),
                ('factor_3_name', models.TextField(blank=True, max_length=100, null=True)),
                ('factor_3_value', models.TextField(blank=True, max_length=100, null=True)),
                ('factor_4_name', models.TextField(blank=True, max_length=100, null=True)),
                ('factor_4_value', models.TextField(blank=True, max_length=100, null=True)),
                ('factor_5_name', models.TextField(blank=True, max_length=100, null=True)),
                ('factor_5_value', models.TextField(blank=True, max_length=100, null=True)),
                ('factor_6_name', models.TextField(blank=True, max_length=100, null=True)),
                ('factor_6_value', models.TextField(blank=True, max_length=100, null=True)),
                ('factor_7_name', models.TextField(blank=True, max_length=100, null=True)),
                ('factor_7_value', models.TextField(blank=True, max_length=100, null=True)),
                ('factor_8_name', models.TextField(blank=True, max_length=100, null=True)),
                ('factor_8_value', models.TextField(blank=True, max_length=100, null=True)),
                ('cache_pkl', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cache_pkl', to='file_manager.filestorage')),
                ('file_attachments', models.ManyToManyField(blank=True, related_name='attachments', to='file_manager.FileStorage')),
                ('file_storage_indeces', models.ManyToManyField(blank=True, related_name='storage', to='file_manager.FileStorage')),
                ('newest_raw', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='newest_raw', to='file_manager.filestorage')),
                ('quanlity_check', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='file_manager.dataanalysisqueue')),
                ('record_creator', django_currentuser.db.models.fields.CurrentUserField(default=django_currentuser.middleware.get_current_authenticated_user, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
<<<<<<< HEAD
            model_name='processingapp',
            name='reviews',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='file_manager.review'),
        ),
        migrations.AddField(
=======
>>>>>>> adding_process_node
            model_name='dataanalysisqueue',
            name='backup_indeces',
            field=models.ManyToManyField(blank=True, related_name='procee_queue_backup', to='file_manager.FileStorage'),
        ),
        migrations.AddField(
            model_name='dataanalysisqueue',
            name='process_creator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='dataanalysisqueue',
            name='processing_app',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='file_manager.processingapp'),
        ),
        migrations.AddField(
            model_name='dataanalysisqueue',
            name='sample_records',
            field=models.ManyToManyField(to='file_manager.SampleRecord'),
        ),
    ]
